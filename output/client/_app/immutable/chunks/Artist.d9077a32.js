var l=Object.defineProperty;var c=(i,t,s)=>t in i?l(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s;var r=(i,t,s)=>(c(i,typeof t!="symbol"?t+"":t,s),s);function f(i,t,s,h,e,o){i.beginPath(),i.arc(t,s,h,0,Math.PI*2,!1),e&&(i.strokeStyle=e,i.stroke()),o&&(i.fillStyle=o,i.fill()),i.closePath()}function X(i,t,s,h,e){i.lineTo(t,s),i.lineTo(h,e)}class w{constructor(t,s,h){r(this,"ctx");r(this,"rootX");r(this,"rootY");r(this,"startX");r(this,"startY");r(this,"endX");r(this,"endY");this.startX=s,this.startY=h,this.endX=s,this.endY=h,this.rootX=s,this.rootY=h,this.ctx=t}reset(t,s){this.startX=this.rootX+t,this.startY=this.rootY+s}drawNextLine(t,s){this.endX=this.startX+t,this.endY=this.startY+s,X(this.ctx,this.startX,this.startY,this.endX,this.endY),this.startX=this.endX,this.startY=this.endY}drawShape(t,s,h,e,o,d,n){this.ctx.beginPath(),this.ctx.moveTo(this.startX,this.startY),t.forEach(a=>this.drawNextLine(a[0],a[1])),s&&(this.reset(h,e),t.forEach(a=>this.drawReflection(a[0],a[1]))),this.ctx.closePath(),d&&(this.ctx.lineCap="round",this.ctx.lineWidth=o,this.ctx.strokeStyle=d,this.ctx.stroke()),n&&(this.ctx.fillStyle=n,this.ctx.fill())}drawReflection(t,s){this.drawNextLine(t*-1,s)}}export{w as A,f as d};
